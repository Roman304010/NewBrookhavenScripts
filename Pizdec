--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,bd)local bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr=89,44,55,57,54,45,90,83,10,39,57,81,38,59,23,49,56,62,62,58,44,76,39,52,89,23,69,74,63,69,65,24,55,30,18,66,71,73,36,16,19,21,30,82,73,45,75,94,26,36,48,15 while bd~=67 do if be>=770 then if be<=1086 then if be<=903 then if be<=795 then if be>779 then bk=(2^52)be=842 else cj=''be=795 end else if be>=882 then if be<901 then bu=2 be=903 else be=933 for cs=1,q do do bt[cs]=bu end bu=(bu*2)end end else be=882 bt={[0]=1}end end else if be<=990 then if be<=933 then ci=function(q,cs,ct,cu,cu,cu)local cu,cv,cw=88,42,27,21,51,85,43,68,35,80,52,73,43,91 while cu~=41 do if cv>=118 then if cv<=118 then do cw=(cw-cw%1)end cv=138 else if cv<149 then cv=155 return cw else cu=41;end end else if cv>=62 then if cv>66 then do cw=((cs/bt[q])%bt[ct])end cv=118 else cv=89 cw=nil end else cv=62 cw=nil end end end end be=961 else if be>969 then bl=function(q,cs,ct,cu,cu,cu)local cu cu=((q/2^(cs-1))%o^((ct-1)-(cs-1)+1))return(cu-cu%1);end be=1025 else be=990 ck=(bit_lib and bit_lib.bxor or function(o,q)o=o%(2^32)q=q%(2^32)local cs,ct=0,1 while o>0 and q>0 do local cu,cv=o%16,q%16 cs=cs+bz[cu+1][cv+1]*ct o=(o-cu)/16 q=(q-cv)/16 ct=ct*16 end cs=cs+o*ct+q*ct return cs end)end end else if be<=1025 then by=1 be=1057 else if be<1078 then bj=function()local o,q,cs,ct ct,q,o,cs=cd(cr,by,(by+3))by=(by+4);return((cs*16777216)+(o*65536)+(q*256)+ct);end be=1086 else bn=function()local o do o=cd(cr,by,by)end do by=(by+1);end return o;end be=1117 end end end end else if be<=1236 then if be<=1133 then if be<1128 then be=1133 bs=function()local o,q q,o=cd(cr,by,(by+2))by=(by+2);do return((o*256)+q);end end else be=1149 do bp=function()local o,q,cs,ct,cu,cv,cw,cx=53,49,39,72,86,16,84,92,48,82,88,87,90,41,33,33,92,56 while o~=42 do if q>=181 then if q<=247 then if q>=202 then if q>204 then q=271 cs=1 else q=247 cx=(ci(0,ct,20)*4294967296+cw)end else q=202 cv=ci(20,ct,11)end else if q>=297 then if q>305 then o=42;else q=315 return(cu*(2^(cv-1023))*(cx/bk+cs))end else if not(cv~=f)then if 0~=cx then cv=1 cs=0 else do return(cu*n)end end elseif 2047~=cv then else do if k==cx then do do return(cu*(0/0))end end else return(cu*(1/0))end end end q=297 end end else if q<=71 then if q>55 then cw=bj()q=100 else cs,ct,cu,cv,cw,cx=nil q=71 end else if q<=100 then ct=bj()q=135 else if q>144 then do cu=((-1)^ci(31,ct,1))end q=181 else q=159 if((cw==0 and ct==0))then return 0 end end end end end end end end end else if be>=1192 then if be>1196 then be=1270 do bq={}end else be=1236 bf=function(...)do return{...},bg(d,...)end end end else bx=function(d,d,d)local d,f,k,n=73,54,49,55,31,79,80,44,79,54,53,74,80 while d~=34 do if f<=129 then if f<=54 then k,n=nil f=81 else if f<121 then k=bj()f=129 else f=174 do n=cr:sub(by,(by+k-1))end end end else if f>=211 then if f>216 then break else f=238 return n;end else by=(by+k);f=211 end end end end be=1192 end end else if be>=1355 then if be<=1355 then cg=function(d,f,k,n,n)local n,o,q,cs,ct cs=d[61]q=d[127]ct=d[144]o=d[97]n=ca return function(...)local d,n,cu,cv,cw,cx,cy,cz,da cv=1 cz=-1 n=-1 cu={}cy={...}cw=(bg('#',...)-1)d={}do da={}end for n=0,cw do do if(not(n<o))then cu[(n-o)]=cy[(n+1)];else da[n]=cy[(n+1)];end;end end;cx=(cw-o+1)while true do local n,cx,db,dc,dd,de,df,dg,dh,di dc=ct[cv]do dh=dc[123]end do dg=dc[146]end do de=dc[151]end df=dc[12]dd=dc[137]di=dc[13]db=dc[141]n=dc[4]cx=dc[96]if not(dh<44)then if not(dh<66)then if not(dh>76)then if not(dh<71)then if not(dh<74)then if not(dh>74)then da[de]=(da[n]^da[dd]);else if(dh>75)then local dg,dj,dk dg=de dk=da[(dg+2)]dj=(da[dg]+dk)da[dg]=dj;if((dk>0))then if(not(dj>da[dg+1]))then cv=n;da[(dg+3)]=dj;end elseif(not(dj<da[dg+1]))then cv=dc[4];da[(dg+3)]=dj;end else do ca[de]()end end end else if not(dh<72)then if(dh>72)then da[de][da[dc[4]]]=da[dd];else da[de]=(not da[n]);end else do ca=da end end end else if not(dh<68)then if not(dh>68)then da[dc[151]]=da[n][q[dd]];else if(dh<70)then da[de]=cg(cs[n],nil,k);else local dg dg={}if(#d>0)then for dj=1,#d do local dk dk=d[dj]for dj=0,#dk do local dl,dm,dn dl=dk[dj]dm=dl[1]dn=dl[2]if(dm==da and dn>=0)then do dg[dn]=dm[dn]end dl[1]=dg end end end end return da[(dc[151]+2)],false,dc[df];end end else if 66==dc[w]then ca[de]=da[dc[12]]else while(da[dc[151]]~=q[dd])do cv=n;break end end end end else if not(dc[123]>81)then do if not(dh<79)then if not(dh<80)then if(dh>80)then if(not(da[de]<da[dd]))then cv=n;end;else cv=((q[de]~=q[dd])and n or cv)end else ct[cv]=bq[dc[13]];cv=dc[4];end else if(dh>77)then da[de]=#da[n];else do return da[db][dc[13]]end end end end else if not(dc[123]<85)then if not(dh<86)then if 86==dc[123]then ca[de]={}else da={};for w=0,cw do do if(w<o)then da[w]=cy[(w+1)];else break end;end end;end else da[dc[151]]=da[n][da[dd]];end else do if not(dh>82)then do while(da[de]<da[dd])do cv=n;break end end else if(dh<84)then local o o=dc[151]do return ch(da,o,(o+dc[4]))end;else da[de]=nil;end end end end end end else if not(dh<55)then if not(dh>59)then if not(dh>56)then if 55==dh then local o o=da[db][di]da[db][di]=(o..da[dd]);elseif da[de]then cv=n;end else if not(dc[123]<58)then if not(dh~=58)then local o,w,cw w=de do o={da[w](ch(da,w+1,n))}end cw=0 for cy=w,dd do do cw=(cw+1);end do da[cy]=o[cw];end end else end else do da[de]=(da[n]+q[dd]);end end end else do if not(dh<63)then if not(dh<64)then if not(dh~=64)then da[de]=k[q[n]][q[dd]];else da[de]=(da[n]/da[dd]);end else da[de]=ca[dc[12]]end else do if not(dh<61)then if(dh<62)then local o o=de da[o]=da[o](ch(da,o+1,cz));else da[de]=k[q[n]];end else da[de][q[n]]=q[dd];end end end end end else if not(dh<49)then do if not(dc[123]>51)then if not(dh>49)then f[n]=da[de];else if(dh<51)then local o,w do o=dc[151]end do w=n end for cw=o,w do do da[cw]=cu[(cw-o)];end end;else da[dc[de]]=da end end else if not(dh<53)then if not(dc[123]~=53)then local o,w w=de o=da[n]da[(w+v)]=o;do da[w]=o[da[dd]];end else da[de]={};end else da[cx]=(function()da[de]=cg(cs[df],nil,k);end)end end end else if not(dh>45)then do if(dh<45)then da[de]=(da[n]+da[dd]);else do da[de]=f[n];end end end else if not(dh<47)then if(dh>47)then else da[de]=(da[n]%da[dd]);end else da[de]=(da[n]-da[dc[137]]);end end end end end else if not(dc[123]>21)then if not(dh<11)then if not(dh>15)then if not(dc[123]<13)then if not(dc[123]>13)then local f,o f=de o={}if(#d>0)then for v=1,#d do local w w=d[v]do for v=0,#w do local cs,cu,cw cs=w[v]do cu=cs[1]end do cw=cs[2]end if(cu==da and cw>=0)then o[cw]=cu[cw]cs[1]=o end end end end end return ch(da,f,cz);else if(dh>14)then local f f=dc[151]da[f]=da[f](da[f+1]);else local f,o,v,w,cs w=de cs=dc[137]v=(w+2)do o={da[w](da[w+1],da[v])}end for cu=1,cs do da[(v+cu)]=o[cu]end f=da[(w+3)]if f then da[v]=f else cv=n;end;end end else if not(dh~=11)then local f,o f=de o=da[n]da[(f+1)]=o;da[f]=o[q[dd]];else if not da[dd]then da[de]=da[dd];cv=n;end;end end else if not(dh<19)then do if not(dc[123]>19)then if(not(da[de]==da[dd]))then cv=n;end;else do if(dh>20)then local f,o,v,w o=de f,w=bf(da[o](ch(da,(o+1),n)))do cz=(w+o-r)end v=0 for r=o,cz do v=(v+1);da[r]=f[v];end;else da[de]=q[n]end end end end else if not(dh<t)then if(dc[123]<bb)then da[de]();else da[de]=(da[n]*da[dd]);end elseif not da[dc[151]]then cv=n;end end end else if not(dh>4)then do if not(dh>1)then if(dh<1)then cv=n;else ca[dc[151]]=ca[df]end else if not(dh>2)then do do return da[de]end end else do if 3==dh then da[de]=(da[n]*q[dd]);else da[de]=(0~=n);cv=(cv+1);end end end end end else if not(dh<8)then do if not(dh<9)then if(dh<10)then do k[q[n]]=da[de];end else cv=((q[de]<da[dd])and dc[4]or cv)end else da[de]=ca[df]end end else do if not(dc[123]<6)then if 6==dh then da[dc[151]]=da[n];else da[cx]();end else local f f=de do return da[f](ch(da,(f+1),dc[4]))end;end end end end end else if not(dh<s)then if not(dh<38)then if not(dh>40)then if not(dh>38)then for f=de,n do da[f]=nil;end;else if(dc[123]<40)then local f,o,r do r=de end o=da[r]f=da[(r+2)]do if((f>0))then if((o>da[r+1]))then cv=n;else da[(r+3)]=o;end elseif((o<da[r+1]))then do cv=n;end else da[(r+3)]=o;end end else ct[cv]=bq[di];do cv=n;end end end else if not(dh>41)then da[de]=-da[n];else if 42==dh then local f do f=de end da[f](da[(f+x)])else cz=dc[dc[151]];end end end else if not(dh<35)then if not(dh>35)then do da[de]=(da[n]%q[dd]);end else if(dh<37)then local f,o,r,s do r=dc[151]end f={da[r]()}o=dd s=0 for t=r,o do s=(s+1);da[t]=f[s];end else local f,o o=n f=da[o]for r=(o+1),dc[137]do f=(f..da[r]);end;da[de]=f;end end else if(dh<34)then k=da[dc[de]]else end end end else if not(dh<27)then if not(dh>29)then if not(dh<28)then if(dh<29)then if((q[de]<da[dd]))then cv=n;end;else if de then de=false;do dd=n;end cv=(cv-1);else cv=(cv+n+dd);end end elseif((da[de]>da[dc[137]]))then cv=dc[4];end else if not(dh<31)then if(dh<32)then local f,k k=de f={}if(#d>0)then for o=1,#d do local r r=d[o]for o=0,#r do local s,t,v do v=r[o]end t=v[1]s=v[2]if(t==da and s>=0)then do f[s]=t[s]end v[1]=f end end end end return da[k],da[(k+1)]else local f,k f,k=bf(...)for k=1,de do da[(k-1)]=f[k]end end else q=ca[de](q)end end else if not(dc[123]>23)then do if(dh>22)then da[dc[151]]=(da[n]/q[dd]);else local f,k k=de f={}for o=1,#d do local q q=d[o]for d=0,#q do local o,r,s do o=q[d]end r=o[1]s=o[2]if(r==da and s>=k)then f[s]=r[s];do o[1]=f;end end;end;end;end end else if not(dh>24)then da[de]=da[n]else if(dh<26)then local d,f,k,o f=de k=((dc[137]-1)*50)d=da[f]o=n for q=1,o do d[(k+q)]=da[(f+q)]end;else local d d=dc[151]do da[d]=da[d](ch(da,d+1,n));end end end end end end end end cv=(cv+1);end;end;end be=1379 else if be<1407 then be=1415 return cg(br(bh()),{},bh())();else bd=67;end end else if be>=1293 then if be>1302 then be=1355 bm={}else ca={}be=1309 end else be=1293 br=function(d,f,f,f)local f,k,n,o,q,r,s,t=70,57,86,28,27,19,48,36,71,81,94,43,59,31,17,43,26,67,47,14,16,37,66,43,61 while f~=39 do if k>=339 then if k<=425 then if k>=398 then if k>401 then r={}k=451 else k=425 q=bj()end else if k>341 then k=398 n[61]=t;else for v=1,bj()do t[v-1]=br();end k=358 end end else if k<=498 then if k<492 then k=498 for v=1,q do local w,x,bb,bd=59,53,74,33,51,99,21,92,83,13,14,58,40,78 while w~=38 do if x>=153 then if x>=201 then if x<235 then x=244 r[v]=bd;else w=38;end else x=201 if(not(bb~=4))then bd=(0~=bn());elseif(not(bb~=2))then bd=bp();elseif(not(bb~=0))then bd=bx();elseif(not(bb~=1))then bd=d[bx()];end;end else if x<=53 then bb,bd=nil x=82 else if x<108 then x=114 bb=bn()else x=153 bd=nil end end end end end else n[127]=r k=546 end else if k>=563 then if k<581 then k=588 return n;else f=39;end else k=563 n[97]=bn();end end end else if k<=160 then if k<=73 then if k>66 then s={}k=118 else k=73 n,o,q,r,s,t=nil end else if k<158 then t={}k=160 else n={}k=197 end end else if k<=240 then if k<236 then o=bj()k=240 else for d=(#bq+1),(#bq+o)do local f,o,q,r,t=73,42,76,43,10,58,37,23,46,72,62,39,27,98,33,38,89,72,88,67,35,20 while f~=54 do if o>=300 then if o<=396 then if o>=367 then if o<393 then o=396 do q[137]=bl(t,b,29);end else q[4]=bl(r,12,33);o=425 end else if o<312 then q[151]=bl(t,3,11);o=320 else o=367 q[12]=bl(t,12,20);end end else if o<=459 then if o>434 then q[i]=-q[137]o=493 else do q[141]=-q[151]end o=459 end else if o>498 then f=54;else o=512 do bq[d]=q;end end end end else if o<=145 then if o<=82 then if o>45 then do q={}end o=117 else o=82 q,r,t=nil end else if o<142 then o=145 q[146]=bn();else t=bj()o=167 end end else if o<=197 then if o<189 then o=197 r=bj()else do q[13]=bn();end o=239 end else if o>241 then q[123]=bl(r,1,11);o=300 else o=279 q[179]=bl(t,1,2);end end end end end end k=285 end else if k<321 then for b=1,bj()do local d,f,i,o,q,r=55,74,94,68,95,79,38,73,12,70,36,98,38,27,22,33,63,18,58,65,83,88,49,87,14,70 while d~=37 do if f>=334 then if f>=420 then if f>=481 then if f<=481 then q[96]=-q[137]f=521 else if f<538 then f=545 s[b]=q;else break end end else if f<436 then q[13]=bl(i,12,20);f=445 else f=481 q[141]=-q[151]end end else if f>=380 then if f<399 then q[4]=bl(o,12,33);f=403 else q[137]=bl(i,21,29);f=420 end else if f>342 then f=380 do q[a]=bl(i,3,11);end else f=355 q[123]=bl(o,1,11);end end end else if f<=155 then if f<=96 then if f>83 then f=139 q={{},nil,nil}else i,o,q,r=nil f=96 end else if f>147 then f=177 q[11]={};else q[146]=bn();f=155 end end else if f<=219 then if f<211 then while(bn()==1)do for a=1,bn()do q[11][a]={bn()==0,bj()}end break end f=219 else f=266 i=bj()end else if f<=266 then f=294 o=bj()else if f<317 then r=bl(i,1,2)f=319 else q[179]=r f=334 end end end end end end end k=323 else n[144]=s;k=339 end end end end end end end end end end else if be>=432 then if be<=571 then if be<=473 then if be>438 then be=519 cn=type else bg=select be=473 end else if be>=550 then if be>559 then be=615 cm=math.floor else bo=math.abs be=571 end else do co=(function(a,b)if'number'==cn(a)then do return true end else do return false end end end)end be=550 end end else if be>=695 then if be>=739 then if be>741 then be=770 bz={{0,1,2,3,y,5,6,7,8,9,10,11,12,13,14,15,},{1,z,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,m,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,bc,},{4,5,6,7,0,1,2,3,12,13,14,15,8,j,10,11,},{ba,4,7,6,1,0,c,2,13,12,15,14,9,8,11,10,},{6,h,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,l,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,u,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,p,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,e,},{15,14,13,12,11,10,9,g,7,6,5,4,3,2,1,0,},nil,nil}else be=754 cr=cpfunction(a,b)return cq[bw(a,16)]end)end else do for a=0,255 do cq[a]=bv(a);end end be=739 end else if be<=615 then do ch=(unpack or table.unpack)end be=653 else if be>662 then cq={}be=695 else bw=tonumber be=675 end end end end else if be<=207 then if be<=90 then if be>51 then cd=string.byte be=133 else be=90 bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr=nil end else if be>=167 then if be>175 then be=239 cp=string.gsub else cb=string.sub be=207 end else be=167 do bv=string.char end end end else if be>=356 then if be<=356 then bi=math.ldexp be=373 else if be>380 then cc=setmetatable be=432 else be=397 do bh=(getfenv or function()return _ENV end)end end end else if be<=239 then do ce=string.rep end be=282 else if be>291 then cf=table.insert be=356 else be=313 cl=table.concat end end end end end end end end)(151,21,3,'#',1,0,8,7,96,9,0,11,11,0,2,5,31,1,33,17,14,1,123,1,4,0,5,18,12)
